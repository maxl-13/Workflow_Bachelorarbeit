trigger:
  branches:
    include:
    - '*'
  tags:
    include:
    - '*'

pool:
  vmImage: windows-latest

# Build Debug

jobs:
- job: BuildDebug
  displayName: Build Debug
  variables:
    solution: '.\SimpleCalculations\SimpleCalculations.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Debug'
  
  steps:

  - task: NuGetToolInstaller@1
    displayName: Install NuGet
  
  - script: dotnet restore $(solution)
    displayName: Restore

  - script: dotnet build $(solution) -c $(buildConfiguration) --no-restore
    displayName: Build

  - script: dotnet test $(solution) -c $(buildConfiguration) --no-build
    displayName: Test

- job: BuildRelease
  displayName: Build Release
  dependsOn: BuildDebug
  condition: and(succeeded(), or(contains(variables['Build.SourceBranch'], 'refs/heads/release-'), contains(variables['Build.SourceBranch'], 'refs/heads/main'), contains(variables['Build.SourceBranch'], 'refs/tags/v')))
  variables:
    solution: '.\SimpleCalculations\SimpleCalculations.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'
    disableable.coverage: true

  steps:
  - task: NuGetToolInstaller@1
    displayName: Install NuGet

  - task: NuGetCommand@2
    displayName: Restore Solution
    inputs:
      restoreSolution: '$(solution)'      

  - task: VSBuild@1
    displayName: Build $(buildConfiguration)
    inputs:
      solution: '$(solution)'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'
  
  - script: dotnet test $(solution) -c $(buildConfiguration) --collect:"XPlat Code Coverage"
    displayName: Test $(buildConfiguration)

  - script: dotnet tool install -g dotnet-reportgenerator-globaltool
    displayName: Install Reportgenerator
 
  - script: reportgenerator -reports:".\SimpleCalculations\SimpleCalculations.Tests\TestResults\**\coverage.cobertura.xml" -targetdir:$(Build.SourcesDirectory)/coverlet/reports -reporttypes:"Cobertura"
    displayName: Create Report

  - task: PublishCodeCoverageResults@1
    displayName: Publish Code Coverage
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Build.SourcesDirectory)/coverlet/reports/Cobertura.xml'

- job: Publish
  displayName: NugetPush + GitHub Release
  dependsOn: BuildRelease
  condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'refs/tags/v'))
  variables:
    solution: '.\SimpleCalculations\SimpleCalculations.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'
    disableable.coverage: true

  steps:
  - task: NuGetToolInstaller@1
    displayName: Install NuGet

  - task: NuGetCommand@2
    displayName: Restore Solution
    inputs:
      restoreSolution: '$(solution)'

  - script: pwd

  - script: ls

  - script: dotnet build $(solution) -c $(buildConfiguration)
    displayName: Build $(buildConfiguration)

  - script: dotnet pack $(solution) -c $(buildConfiguration) -o output/
    displayName: Pack

  - script: dotnet nuget add source --username maxl-13 --password $(GH_Publish) --store-password-in-clear-text --name github "https://nuget.pkg.github.com/maxl-13/index.json"
  - script: dotnet nuget push output\*.nupkg -k $(GH_Publish) --source "github"
    displayName: Nuget Push
  - task: GitHubRelease@1
    inputs:
      gitHubConnection: 'NugetPush_Release'
      repositoryName: '$(Build.Repository.Name)'
      action: 'create'
      target: '$(Build.SourceVersion)'
      tagSource: 'gitTag'
      title: '$(Build.SourceBranchName)'
      changeLogCompareToRelease: 'lastFullRelease'
      changeLogType: 'commitBased'
      assets: |
        'output/*'
        '$(Build.ArtifactStagingDirectory)/*'